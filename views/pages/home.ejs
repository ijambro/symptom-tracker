<!DOCTYPE html>
<html lang="en">

<head>
    <%- include("../partials/head"); %>
        <link href="/css/home.css" rel="stylesheet" type="text/css">
        <link href="/css/footer.css" rel="stylesheet" type="text/css">
</head>

<body>

    <%- include("../partials/header", { selectedTab: "recorder" }); %>

    <main class="container">

        <p>Welcome, <%= userFirstName %>!</p>

        <ul class="collapsible">
            <li>
                <div class="collapsible-header"><i class="material-icons pink-text text-accent-2">signal_cellular_connected_no_internet_4_bar</i>Pain</div>
                <div class="collapsible-body">

                    <form action="/metrics/pain">
                        <div class="row">
                            Enter your pain level, darling:
                        </div>
                
                        <div class="row">
                            <p class="range-field">
                                <input type="range" name="level" min="0" max="10" />
                            </p>
                        </div>
                        
                        <%- include("../partials/submit", { suffix: "pain" }); %>
                    </form>
                </div>
            </li>
            <li>
                <div class="collapsible-header"><i class="material-icons pink-text text-accent-2">filter_drama</i>Gas</div>
                <div class="collapsible-body">

                    <form action="/metrics/gas">
                        <div class="row">
                            Are you gassy, my love?
                        </div>
                
                        <div class="row">
                            <p class="range-field">
                                <input type="range" name="level" min="0" max="2" />
                            </p>
                        </div>

                        <%- include("../partials/submit", { suffix: "gas" }); %>
                    </form>
                </div>
            </li>
            <li>
                <div class="collapsible-header"><i class="material-icons pink-text text-accent-2">whatshot</i>Poop</div>
                <div class="collapsible-body">

                    <form action="/metrics/poop">
                        <div class="row">
                            <div class="switch">
                                <label>
                                    No poop (decoy)
                                    <input id="pooped_switch" type="checkbox" name="pooped">
                                    <span class="lever pink accent-2"></span>
                                    Yes, ploops and plops!
                                </label>
                            </div>
                        </div>
                        <div id="poop_consistency" class="row hide">
                            Consistency
                            <div class="input-field col s12">
                                <select name="consistency" class="browser-default">
                                    <option value="4">Diarrhea</option>
                                    <option value="3" selected>Loose</option>
                                    <option value="2">Soft</option>
                                    <option value="1">Firm</option>
                                </select>
                                <!-- <label>Consistency</label> -->
                                </div>
                        </div>

                        <div class="row">
                            <p>
                                <label>
                                    <input type="checkbox" name="urgent" />
                                    <span>Urgent</span>
                                </label>
                            </p>
                            <p>
                                <label>
                                    <input type="checkbox" name="explosive" />
                                    <span>Explosive</span>
                                </label>
                            </p>
                            <p>
                                <label>
                                    <input type="checkbox" name="blood" />
                                    <span>Has Blood</span>
                                </label>
                            </p>
                        </div>
                        
                        <div class="row">
                            Minutes in bathroom
                        </div>
                        <div class="row">
                            <p class="range-field">
                                <input type="range" name="duration" min="0" max="30" />
                            </p>
                        </div>

                        <%- include("../partials/submit", { suffix: "poop" }); %>
                    </form>
                </div>
            </li>
        </ul>

    </main>

    <%- include("../partials/footer"); %>

</body>

<script type="text/javascript">

document.addEventListener("DOMContentLoaded", function() {
    let elems = document.querySelectorAll(".collapsible");
    M.Collapsible.init(elems, {});

    elems = document.querySelectorAll("select");
    M.FormSelect.init(elems, {});

    // Earlier date and time pickers
    elems = document.querySelectorAll(".datepicker");
    M.Datepicker.init(elems, { format: "yyyy-mm-dd" });

    elems = document.querySelectorAll(".timepicker");
    M.Timepicker.init(elems, {});
});

document.getElementById("pooped_switch").addEventListener("change", () => {
    document.getElementById("poop_consistency").classList.toggle("hide");
});

// Change all form submits to make async post instead
// https://pqina.nl/blog/async-form-posts-with-a-couple-lines-of-vanilla-javascript/
document.querySelectorAll("form").forEach(form => {
    form.addEventListener("submit", e => {
        const form = e.target;
        console.log("Form submitted!");
        let formFieldsAsObject = Object.fromEntries(new FormData(form).entries());
        console.log(formFieldsAsObject);

        // Post data using the Fetch API
        fetch(form.action, {
            method: "POST",
            body: JSON.stringify(formFieldsAsObject),
            headers: {"Content-Type": "application/json"}
        })
        .then(response => {
            if (response.ok) {
                M.toast({html: "Successfully recorded!  Great job, you!", classes: "rounded green accent-3"});
            } else {
                M.toast({html: "Failed to record!  Please try again later.  Contact support if the error persists.", classes: "rounded pink accent-2"});
            }
        })
        .catch(error => {
            M.toast({html: "Connection error. Please try again later.", classes: "rounded pink accent-2"});
        });

        // Prevent the default form submit to stay on this page
        e.preventDefault();
    });
});

</script>

</html>